"main";let glob;_a4a‍.w('glob',[["default",function(v){glob=v}]]);let path;_a4a‍.w('path',[["default",function(v){path=v}]]);let srcRoot,pagePath,componentPath;_a4a‍.w('./config.mjs',[["srcRoot",function(v){srcRoot=v}],["pagePath",function(v){pagePath=v}],["componentPath",function(v){componentPath=v}]]);


const { join } = path

const getEntriesByPath = dirPath => {
  return glob
    .sync('*/', {
      cwd: join(srcRoot, dirPath)
    })
    .reduce((entries, dir) => {
      const js = glob.sync(join(dirPath, dir, '*.js'), {
        cwd: srcRoot
      })
      if (js.length === 1) {
        return Object.assign(entries, {
          [join(dirPath, dir, dir).replace(/\/$/, '')]: js[0]
        })
      } else {
        console.log(
          `-- The directory of ${join(dirPath, dir)} must be unique --`
        )
        return entries
      }
    }, {})
}

_a4a‍.d({
  entries: Object.assign(
    {
      app: './src/app.js'
    },
    getEntriesByPath(pagePath),
    getEntriesByPath(componentPath)
  )
});
